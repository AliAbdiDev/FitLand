datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  token       String?
  role        String       @default("user")
  profile     Profile?     @relation(name: "UserProfile")
  profileId   String?      @unique @db.ObjectId
  addresses   Address[]    @relation(name: "UserAddresses")
  resetTokens ResetToken[] @relation(name: "UserResetTokens")
}

model ResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  user      User     @relation(name: "UserResetTokens", fields: [userId], references: [id])
  userId    String   @db.ObjectId
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Profile {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  user        User?     @relation(name: "UserProfile", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId      String?   @unique @db.ObjectId
  avatar      String?
  fatherName  String?
  phoneNumber String?
  gender      String?
  birthDate   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Address {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(name: "UserAddresses", fields: [userId], references: [id])
  userId     String   @db.ObjectId
  street     String
  city       String
  state      String?
  postalCode String?
  country    String
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
